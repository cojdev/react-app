@import 'variables';
@import 'mixins';
@import 'base';

body {
    padding: 2rem;
    background: #f2f5fb;
}

h1 {
    font-weight: 700;
    font-size: 1.5rem;
    text-transform: uppercase;
    letter-spacing: .1ch;
    color: @primary;
    margin: 0 0 1em;
    line-height: 1;
}

input[type=text] {
    font-weight: 300;
    display: block;
    background: #fff;
    color: #888;
    border: none;
    height: 2rem;
    line-height: 2rem;
    font-size: 1.5rem;
    font-family: inherit;
    width: 100%;
    outline: none;
    transition: 300ms ease;   
    &:focus {
        background: #f8f8f8;
    }
}

.wrap {
    margin: 0 auto;
    max-width: 800px;
}

.app {
    padding: 4px 0 0;
    margin: 0 auto;
    background: #fff;
    box-shadow: 0 5px 20px rgba(0,0,0,.1);
    border-radius: 6px;
    overflow: hidden;
    position: relative;
    &::after {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        height: 4px;
        width: 100%;
        background: linear-gradient(to right, @primary, spin(@primary, -20%));
    }
}

.task-form {
    margin: 0;
    display: block;
    padding: 1rem;
    overflow: hidden;
}

.task-list {
    padding: 0;
    margin: 0;
    background: #fff;
    
    li {
        list-style: none;
        padding: .5rem 1rem;
        border-top: 1px solid @accent-light;
    }
}

.task-input {
    width: calc(100% - 8rem);
    float: left;
}

.task-add-button {
    float: right;
}

.task-add-button {
    .button;
    width: 2rem;
    height: 2rem;
    border-radius: 50px;
    padding: 0;
    color: darken(@accent-light, 40%);
    font-size: 2rem;
    background: transparent;
    transition: 150ms ease;

    svg {
        .svg-line;
    }

    &:hover {
        background: darken(#fff, 5%);
    }

     &:active {
         box-shadow: inset 0 2px 10px rgba(0,0,0,0.1);
         background: darken(#fff, 10%);
     }
}

.task-item-remove {

    .button;
    position: relative;
    float: right;
    display: block;
    height: 2rem;
    width: 2rem;
    border: none;
    padding: 0;
    background: transparent;
    
    svg {
        .svg-line;
        stroke: @accent-light;
    }

    &:hover svg {
        stroke: @primary;
    }

    &::before {
        transform: rotate(-45deg);
    }
    
    &::after {
        transform: rotate(45deg);
    }
}

.task-item-checked {
    color: #888;
}


// Checkbox
input[type=checkbox] {
    display: none;

    & + label {
        padding-left: 2rem;
        position: relative;
        transition: color 150ms ease;
        height: 2rem;
        line-height: 2rem;

        &::before, &::after {
            display: block;
            position: absolute;
            content: '';
        }

        @check-size: 1.25rem;

        &::before {
            left: 0;
            height: @check-size;
            width: @check-size;
            margin-right: .5rem;
            top: ~"calc((100% - @{check-size}) / 2)";
            border: 2px solid @accent-light;
            border-radius: 50px;
        }

        &::after {
            // Params
            @height: @check-size / 3.5;
            @width: @check-size / 2;
            @angle: 45deg;

            left: (@check-size - @width)/ 2;
            top: (@check-size - @height - (@height * sin(@angle) / 2)) / 2;
            height: @height;
            width: @width;
            margin-right: .5rem;
            border-left: 2px solid @primary;
            border-bottom: 2px solid @primary;
            transform: rotate(-@angle) scale(0.5);
            transform-origin: 50% 50%;
            opacity: 0;
            transition: 150ms ease-in-out;
        }
    }
}

input[type=checkbox]:checked + label {
    color: #ccc;
    @angle: 45deg;
    
    &::after {
        opacity: 1;
        transform: rotate(-@angle) scale(1);
    }
}